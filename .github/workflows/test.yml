# build and test on linux, windows, mac with node 12,14
name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pnpmstore:
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    outputs:
      pnpm_store_path: ${{steps.pnpm_store_path_output.outputs.pnpm_store_path}}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node: [ 12, 14 ]

    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: Get windows pnpm cache path
        if: runner.os == 'windows'
        run: echo "pnpm_store_path=D:\.pnpm-store" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Get non-windows pnpm cache path
        if: runner.os != 'windows'
        run: echo "pnpm_store_path=~/.pnpm-store" >> $GITHUB_ENV
      - id: pnpm_store_path_output
        run: echo "::set-output name=pnpm_store_path::$pnpm_store_path"
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: pnpm-store-fallback
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        id: pnpm-store-fallback
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-fallback-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-fallback-

      - name: install
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

  lint:
    needs: pnpmstore
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ needs.pnpmstore.outputs.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: install
        run: pnpm install --frozen-lockfile --offline --ignore-scripts
      - name: install esbuild
        run: node node_modules/esbuild/install.js
      - name: build
        run: pnpm run build:ci
      - name: lint
        run: pnpm lint

  audit:
    needs: pnpmstore
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ needs.pnpmstore.outputs.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: install
        run: pnpm install --frozen-lockfile --offline --ignore-scripts
      - name: audit
        run: pnpm audit

  test:
    needs: pnpmstore
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node: [ 12, 14 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ needs.pnpmstore.outputs.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: pnpm-store-fallback
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        id: pnpm-store-fallback
        with:
          path: ${{ env.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-fallback-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-fallback-
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: install-offline
        if: steps.pnpm-store.outputs.cache-hit == 'true'
        run: pnpm install --frozen-lockfile --offline --ignore-scripts
      - name: install-online
        if: steps.pnpm-store.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts
      - name: install esbuild
        run: node node_modules/esbuild/install.js
      - name: build
        run: pnpm run build:ci
      - name: run tests
        run: pnpm test:ci

      - name: archive tests temp directory
        if: failure()
        shell: bash
        run: tar -cvf test-temp.tar  --exclude="node_modules" --exclude=".yarn" --exclude="dist" --exclude=".pnp.js" temp/
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-failure-${{github.run_id}}-${{ matrix.os }}-${{ matrix.node }}
          path: |
            test-temp.tar
            temp/serve/jest-results.json
            temp/serve/junit.xml
            temp/build/jest-results.json
            temp/build/junit.xml
            pnpm-debug.log
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: test-success-${{github.run_id}}-${{ matrix.os }}-${{ matrix.node }}
          path: |
            temp/serve/jest-results.json
            temp/serve/junit.xml
            temp/build/jest-results.json
            temp/build/junit.xml

  build:
    needs: pnpmstore
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: pnpm-store
        uses: actions/cache@v2
        id: pnpm-store
        with:
          path: ${{ needs.pnpmstore.outputs.pnpm_store_path }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: install
        run: pnpm install --frozen-lockfile --offline --ignore-scripts
      - name: install esbuild
        run: node node_modules/esbuild/install.js
      - name: build
        run: pnpm run build
