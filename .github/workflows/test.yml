# build and test on linux, windows, mac with node 12,14.x
name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    env:
      CI: true
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node: [ 12.x, 14.x ]

    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: Get windows pnpm cache path
        if: runner.os == 'windows'
        run: echo "pnpm_cache_path=D:\.pnpm-store\v3" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Get non-windows pnpm cache path
        if: runner.os != 'windows'
        run: echo "pnpm_cache_path=~/.pnpm-store/v3" >> $GITHUB_ENV
      - name: install pnpm
        run: npm i -g pnpm@5
      - uses: actions/cache@v2
        id: pnpm-cache
        with:
          path: ${{ env.pnpm_cache_path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: cache node_modules
        id: node_modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/pnpm-lock.yaml')) }}

      - name: install
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts
      - name: install esbuild
        run: node node_modules/.pnpm/esbuild/install.js
      - name: build:ci
        run: pnpm build:ci

      - name: cache workspace
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-svitejs-${{ github.sha }}

  lint:
    needs: setup
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14.x ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: restore workspace cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-svitejs-${{ github.sha }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: lint
        run: pnpm lint

  audit:
    needs: setup
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14.x ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: restore workspace cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-svitejs-${{ github.sha }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: audit
        run: pnpm audit

  test:
    needs: setup
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node: [ 12.x, 14.x ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: restore workspace cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-svitejs-${{ github.sha }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: install esbuild
        run: node node_modules/.pnpm/esbuild/install.js
      - name: run tests
        run: pnpm test:ci

      - name: archive tests temp directory
        if: failure()
        shell: bash
        run: tar -cvf test-temp.tar --exclude="node_modules" --exclude=".yarn" --exclude="dist" --exclude=".pnp.js" temp/
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-failure-${{github.run_id}}-${{ matrix.os }}-${{ matrix.node }}
          path: |
            test-temp.tar
            temp/serve/jest-results.json
            temp/serve/junit.xml
            temp/build/jest-results.json
            temp/build/junit.xml
            pnpm-debug.log
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: test-success-${{github.run_id}}-${{ matrix.os }}-${{ matrix.node }}
          path: |
            temp/serve/jest-results.json
            temp/serve/junit.xml
            temp/build/jest-results.json
            temp/build/junit.xml

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14.x ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@v2

      - name: restore workspace cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-svitejs-${{ github.sha }}
      - name: install pnpm
        run: npm i -g pnpm@5
      - name: build
        run: pnpm build
